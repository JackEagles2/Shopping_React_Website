{"ast":null,"code":"var _jsxFileName = \"/home/eagles/git/shopping/frontend/src/components/ProductDialog.tsx\";\nimport React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@mui/material';\nimport axios from \"axios\";\n\n// Import uuidv4 for generating unique IDs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductDialog = ({\n  product,\n  isOpen,\n  onClose,\n  setBasket,\n  basketItems\n}) => {\n  const addProductToBasket = async productToAdd => {\n    if (!basketItems) return;\n\n    // Check if the product is already in the basket\n    const existingItemIndex = basketItems.findIndex(item => item.product._id === productToAdd._id);\n    if (existingItemIndex !== -1) {\n      // If product already exists, update its count in the local state\n      const updatedBasket = [...basketItems];\n      updatedBasket[existingItemIndex].count++;\n      setBasket(updatedBasket);\n\n      // Optionally, update the count on the server as well\n      try {\n        await axios.put(`http://localhost:5000/basketitem/${updatedBasket[existingItemIndex]._id}`, {\n          count: updatedBasket[existingItemIndex].count\n        });\n      } catch (error) {\n        console.error('Error updating basket item count:', error);\n      }\n    } else {\n      // If product does not exist in basket, add it to the basket\n      try {\n        const response = await axios.post('http://localhost:5000/basketitem', {\n          product: productToAdd,\n          count: 1 // Initial count when adding to basket\n        });\n        console.log('Product added to basket:', response.data);\n\n        // Update local state with updated basket items received from backend\n        //setBasket(response.data);\n      } catch (error) {\n        console.error('Error adding product to basket:', error);\n      }\n    }\n  };\n  if (!product) return null;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: isOpen,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"mini-image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name,\n          className: \"mini-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [product.stocked ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addProductToBasket(product),\n        children: \"Add to Basket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"error\",\n        children: \"Out of Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        color: \"primary\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_c = ProductDialog;\nexport default ProductDialog;\nvar _c;\n$RefreshReg$(_c, \"ProductDialog\");","map":{"version":3,"names":["React","Dialog","DialogTitle","DialogContent","DialogActions","Button","Typography","axios","jsxDEV","_jsxDEV","ProductDialog","product","isOpen","onClose","setBasket","basketItems","addProductToBasket","productToAdd","existingItemIndex","findIndex","item","_id","updatedBasket","count","put","error","console","response","post","log","data","open","children","name","fileName","_jsxFileName","lineNumber","columnNumber","dividers","className","src","image","alt","gutterBottom","description","stocked","onClick","variant","color","_c","$RefreshReg$"],"sources":["/home/eagles/git/shopping/frontend/src/components/ProductDialog.tsx"],"sourcesContent":["import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@mui/material';\nimport {BasketItem, Product} from '../data';\nimport axios from \"axios\";\n\n// Import uuidv4 for generating unique IDs\n\n\ninterface ProductDialogProps {\n    product: Product | null;\n    isOpen: boolean;\n    onClose: () => void;\n    setBasket: React.Dispatch<React.SetStateAction<BasketItem[]>>;\n    basketItems: BasketItem[];\n}\n\nconst ProductDialog: React.FC<ProductDialogProps> = ({ product, isOpen, onClose, setBasket , basketItems}) => {\n\n    const addProductToBasket = async (productToAdd: Product) => {\n        if (!basketItems) return;\n\n        // Check if the product is already in the basket\n        const existingItemIndex = basketItems.findIndex(item => item.product._id === productToAdd._id);\n\n        if (existingItemIndex !== -1) {\n            // If product already exists, update its count in the local state\n            const updatedBasket = [...basketItems];\n            updatedBasket[existingItemIndex].count++;\n            setBasket(updatedBasket);\n\n            // Optionally, update the count on the server as well\n            try {\n                await axios.put(`http://localhost:5000/basketitem/${updatedBasket[existingItemIndex]._id}`, {\n                    count: updatedBasket[existingItemIndex].count\n                });\n            } catch (error) {\n                console.error('Error updating basket item count:', error);\n            }\n        } else {\n            // If product does not exist in basket, add it to the basket\n            try {\n                const response = await axios.post('http://localhost:5000/basketitem', {\n                    product: productToAdd,\n                    count: 1  // Initial count when adding to basket\n                });\n                console.log('Product added to basket:', response.data);\n\n                // Update local state with updated basket items received from backend\n                //setBasket(response.data);\n            } catch (error) {\n                console.error('Error adding product to basket:', error);\n            }\n        }\n    };\n\n    if (!product) return null\n    return (\n        <Dialog open={isOpen} onClose={onClose}>\n            <DialogTitle>{product.name}</DialogTitle>\n            <DialogContent dividers>\n                <Typography className='mini-image-container'>\n                    <img src={product.image} alt={product.name} className=\"mini-image\" />\n                </Typography>\n                <Typography gutterBottom>\n                    {product.description}\n                </Typography>\n\n            </DialogContent>\n            <DialogActions>\n                {product.stocked ? (\n                    <Button onClick={() => addProductToBasket(product)}>\n                        Add to Basket\n                    </Button>\n                ) : (\n                    <Typography variant=\"body2\" color=\"error\">\n                        Out of Stock\n                    </Typography>\n                )}\n\n                <Button onClick={onClose} color=\"primary\">\n                    Back\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ProductDialog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}